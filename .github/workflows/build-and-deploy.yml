name: Build & Deploy

on:
  push:

jobs:
  build:
    strategy:
        matrix:
          os: [ubuntu, macos, windows]
          java-version: [11, 17]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
      - name: Run quality assurance and test with coverage
        run: ./gradlew clean check
  release:
    concurrency:
        # Allow only one release at a time.
        group: release
    needs:
      - build
    runs-on: ubuntu-latest
    # Release only where secrets are available.
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npx semantic-release